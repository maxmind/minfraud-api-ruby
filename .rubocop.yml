plugins:
    - rubocop-performance
    - rubocop-rake
    - rubocop-rspec

AllCops:
    TargetRubyVersion: '3.2'
    NewCops: enable

# Metrics.

Metrics/BlockLength:
  Enabled: false # Default is true, but mostly hit in tests.

Metrics/AbcSize:
  Enabled: false # To allow for pre-existing code.

Metrics/ClassLength:
  Enabled: false # To allow for pre-existing code.

Metrics/CyclomaticComplexity:
  Enabled: false # To allow for pre-existing code.

Metrics/MethodLength:
  Enabled: false # To allow for pre-existing code.

Metrics/PerceivedComplexity:
  Enabled: false # To allow for pre-existing code.

# Layout.

Layout/LineLength:
  Max: 150 # Default is 120.

Layout/HashAlignment:
  EnforcedHashRocketStyle: table # Default is key.
  EnforcedColonStyle:      table # Default is key.

Layout/ExtraSpacing:
  ForceEqualSignAlignment: true # Default is false.

Layout/IndentationStyle:
  IndentationWidth: 2 # Default is <none>.

# Style.

Style/HashSyntax:
  EnforcedStyle: ruby19_no_mixed_keys # Default is ruby19. This one is better.

Style/CollectionMethods:
  Enabled: true # Default is false.

Style/NumericLiterals:
  MinDigits: 4 # Default is 5.

Style/NegatedIf: # I disagree with this.
  Enabled: false

Style/IfUnlessModifier: # This doesn't always make sense.
  Enabled: false

# Trailing commas are often good.
Style/TrailingCommaInArguments:
  Enabled: false
Style/TrailingCommaInArrayLiteral:
  Enabled: false
Style/TrailingCommaInHashLiteral:
  Enabled: false

# Default is both which is probably fine, but it changes code and I don't want
# to investigate any possible behavior change right now.
Style/EmptyElse:
  EnforcedStyle: empty

Style/ConditionalAssignment:
  Enabled: false # This produces kind of strange results.

Style/GuardClause:
  Enabled: false # Doesn't always make sense.

Style/FormatStringToken:
  Enabled: false # Seems unnecessary.

# Seems unnecessary. Asks us to call super in a bunch of places when there's no
# need.
Lint/MissingSuper:
  Enabled: false

# Naming.

Naming/VariableNumber:
  Enabled: false # Doesn't always make sense.

Gemspec/DevelopmentDependencies:
  Enabled: false

# This might make sense, but I don't think it's worth moving things around for.
RSpec/SpecFilePathFormat:
  Enabled: false
# Sometimes it makes sense to have lots of assertions.
RSpec/MultipleExpectations:
  Enabled: false
# Sometimes it makes sense to have long tests.
RSpec/ExampleLength:
  Enabled: false
# This seems okay.
RSpec/MultipleDescribes:
  Enabled: false
# This seems to give a bunch of false positives. Specifically it's flagging
# things where we are creating an object and checking no exception happens.
RSpec/NoExpectationExample:
  Enabled: false
